/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        
        if (root == null) {
            return res;
        }
        
        List<Integer> temp = new ArrayList<Integer>();
        generatePath (root, sum, res, temp);
        
        return res;
    }
    
    private void generatePath(TreeNode root, int sum, List<List<Integer>> res, 
                                             List<Integer> temp) {
   
        
        if (root == null) {
            return ;
        }
        
        temp.add(root.val);
        
        if(root.val == sum && root.left == null && root.right == null) {
            res.add(new ArrayList<Integer>(temp));
            temp.remove(temp.size() - 1);
            return;
        }
        
        generatePath(root.left, sum - root.val, res, temp);
        generatePath(root.right, sum - root.val, res, temp);
        temp.remove(temp.size() - 1);
        
    }
}
